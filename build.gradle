plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.palantir.git-version' version '0.12.3'
    id 'io.codearte.nexus-staging' version '0.21.2'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

group = 'io.github.nifty10m.yangyin'
version = gitVersion()

dependencies {
    // Use the latest Groovy version for building this library
    implementation('org.spockframework:spock-core') {
        version {
            prefer '1.3-groovy-2.5'
        }
    }
    implementation ('org.slf4j:slf4j-api') {
        version {
            strictly '[1.7, 1.8['
            prefer '1.7.25'
        }
    }
    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.slf4j:slf4j-simple:1.7.30'
}

tasks.withType(JacocoReport) {
    reports {
        xml.enabled true // XML output is needed for the coverage task
    }
}
jacocoTestReport.dependsOn {
    test
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'yangyin'
            groupId = 'io.github.nifty10m'
            artifact sourcesJar
            artifact javadocJar
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'yangyin'
                description = 'A snapshot comparison library for the spock framework'
                url = "https://www.github.com/nifty10m/yangyin"
                licenses {
                    license {
                        name = "MIT License"
                        url = "http://www.opensource.org/licenses/mit-license.php"
                    }
                }
                developers {
                    developer {
                        id = "terrible_herbst"
                        name = "JÃ¶rg Herbst"
                        email = "joerg.herbst@10m.de"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/nifty10m/yangyin.git"
                    developerConnection = "scm:git:ssh://git@github.com:nifty10m/yangyin.git"
                    url = "https://www.github.com/nifty10m/yangyin"
                }
            }
            from components.java
        }
    }
    repositories {
        maven {
            def snapshotRepoUrl =  "https://oss.sonatype.org/content/repositories/snapshots/"
            def releaseRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.matches("\\d\\.\\d\\.\\d") ? releaseRepoUrl : snapshotRepoUrl
            credentials {
                username System.getenv("SONATYPE_USER")
                password System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusStaging {
    packageGroup = "io.github.nifty10m" //optional if packageGroup == project.getGroup()
    username System.getenv("SONATYPE_USER")
    password System.getenv("SONATYPE_PASSWORD")
}
